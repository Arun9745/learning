//Data types

Data types specify the different sizes and values that can be stored in the variable. There are two types of data types in Java:

Primitive data types: The primitive data types include boolean, char, byte, short, int, long, float and double.
Non-primitive data types: The non-primitive data types include Classes, Interfaces, and Arrays.




//operators

Operator in Java is a symbol that is used to perform operations. For example: +, -, *, / etc.

There are many types of operators in Java which are given below:

*Unary Operator
*Arithmetic Operator
*Shift Operator
*Relational Operator
*Bitwise Operator
*Logical Operator
*Ternary Operator
*Assignment Operator.


///Variables///
String - stores text, such as "Hello". String values are surrounded by double quotes

int - stores integers (whole numbers), without decimals, such as 123 or -123

float - stores floating point numbers, with decimals, such as 19.99 or -19.99

char - stores single characters, such as 'a' or 'B'. Char values are surrounded by single quotes

boolean - stores values with two states: true or false

//Casting

convert one variable to another.
ex(int to double)



//String Length

.Length

String txt = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
System.out.println("The length of the txt string is: " + txt.length());


//Uppercase,Lowercase
String txt = "Hello World";
System.out.println(txt.toUpperCase());   // Outputs "HELLO WORLD"
System.out.println(txt.toLowerCase());   // Outputs "hello world"


//Find a character in a StringThe indexOf() method returns the index (the position) of the first occurrence of a specified text in a string
ex:   String txt = "Please locate where 'locate' occurs!";
System.out.println(txt.indexOf("locate")); // Outputs 7



//concat two strings
You can also use the concat() method to concatenate two strings:
String firstName = "John ";
String lastName = "Doe";
System.out.println(firstName.concat(lastName));


//ArraysArrays are used to store multiple values in a single variable, instead of declaring separate variables for each value.

To declare an array, define the variable type with square brackets:




//loop  through an array
You can loop through the array elements with the for loop, and use the length property to specify how many times the loop should run.

ex
String[] cars = {"Volvo", "BMW", "Ford", "Mazda"};
for (int i = 0; i < cars.length; i++) {
  System.out.println(cars[i]);
}





telusco ---youtube channel



\\ sout
Adding content and variables.
ex("the number is "  + c)




\\stack example
Last in first sout
example
 public static void main(String[] args) {

        Stack stacknumbers = new Stack();
        stacknumbers.add(100);
        stacknumbers.add(101);
        stacknumbers.add(102);
        stacknumbers.add(103);
        stacknumbers.add(104);
        System.out.println(stacknumbers.pop());
        System.out.println(stacknumbers.pop());
        System.out.println(stacknumbers.pop());
    }
}







\\queue example
First in first out
Alt + Enter----->import to particular data structure
example


import java.util.LinkedList;
import java.util.Queue;

public class QueueExample {
    public static void main(String[] args) {
        Queue queuenumbers = new LinkedList();
        queuenumbers.add(99);
        queuenumbers.add(98);
        queuenumbers.add(97);
        queuenumbers.add(96);
        System.out.println(queuenumbers.poll());
        System.out.println(queuenumbers.poll());
        System.out.println(queuenumbers.poll());
    }
}
